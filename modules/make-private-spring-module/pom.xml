<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.18</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<!-- 
	MAVEN NAMING CONVENTIONS SUMMARY:
	
	1. groupId: 
	   - Should be ALL LOWERCASE (same as Java package conventions)
	   - Use reverse domain notation: com.github.username
	   - Represents your organization/namespace
	   - Reusable across multiple projects
	   - Example: com.github.hobbylabs.learn_spring.modules
	
	2. artifactId:
	   - Should use kebab-case (hyphens preferred) or snake_case (underscores)
	   - Represents this specific project
	   - Used in JAR file names and URLs
	   - Example: make-private-spring-module
	
	3. name:
	   - Human-readable display name with proper capitalization and spaces
	   - Shown in IDEs, documentation, and reports
	   - Example: "Demo of Making Private Spring ModuleSpring Boot Batch Demo"
	
	4. Java Package Relationship:
	   - Package should be: groupId + artifactId (with underscores for Java naming)
	   - Example: com.github.tsutomunakamura.spring_boot_batch_demo
	   - Note: Java packages must use underscores, not hyphens
	
	5. Final Maven Coordinate:
	   - Format: groupId:artifactId:version
	   - Example: com.github.tsutomunakamura:spring-boot-batch-demo:0.1.0
	-->

	<groupId>com.github.hobbylabs.learn_spring.modules</groupId>
	<artifactId>make_private_spring_module</artifactId>
	<version>0.2.0</version>
	<name>Private Spring Module Demo</name>
	<description>Demo of Making Private Spring Module</description>

	<properties>
		<java.version>17</java.version>
		<lombok.version>1.18.30</lombok.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<source>17</source>
					<target>17</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!--
		Settings for GitHub Packages Maven Repository.
		Replace OWNER with your GitHub username or organization name.
		Replace REPOSITORY with your GitHub repository name.
		You need to set credentials in your settings.xml with a GitHub personal access token
		that has write:packages permission, then run `mvn deploy`.
		You can see details at below page.
		https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry
	-->
	<!--
      // You can set your GitHub credentials in your ~/.ms/settings.xml file like below.
	  // Make sure to replace YOUR_GITHUB_USERNAME and YOUR_PERSONAL_ACCESS_TOKEN with your actual GitHub username and a personal access token.
	  // How to create a GitHub Personal Access Token:
      //   Go to GitHub → Settings → Developer settings → Personal access tokens (classic)
      //   Create a token with write:packages permission.

      <settings>
        <servers>
          <server>
            <id>github</id>
            <username>YOUR_GITHUB_USERNAME</username>
            <password>YOUR_PERSONAL_ACCESS_TOKEN</password>
          </server>
        </servers>
      </settings>
	-->
	<repositories>
		<repository>
			<id>github</id>
			<url>https://maven.pkg.github.com/hobby-labs/learn-spring</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>github</id>
			<url>https://maven.pkg.github.com/hobby-labs/learn-spring</url>
		</repository>
		<snapshotRepository>
			<id>github</id>
			<url>https://maven.pkg.github.com/hobby-labs/learn-spring</url>
		</snapshotRepository>
	</distributionManagement>

	<!--
		Settings for GitLab Maven Repository (personal access token's method).
		Replace the FQDN(gitlab.com) to your own if you are hosting GitLab on your environment.
		And replace PROJECT_ID to your GitLab project's one.
		You can find ti in settings page on your GitLab project.
		Then you have to set credentials in your settings.xml then run `mvn deploy`.
		You can see details at below page.
		https://docs.gitlab.com/ee/user/packages/maven_repository/
	-->
	<!--

	<repositories>
		<repository>
			<id>gitlab-maven</id>
			<url>https://gitlab.com/api/v4/projects/PROJECT_ID/packages/maven</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>gitlab-maven</id>
			<url>https://gitlab.com/api/v4/projects/PROJECT_ID/packages/maven</url>
		</repository>
		<snapshotRepository>
			<id>gitlab-maven</id>
			<url>https://gitlab.com/api/v4/projects/PROJECT_ID/packages/maven</url>
		</snapshotRepository>
	</distributionManagement>
	-->

	<!--
		Settings for Azure Artifact.
		Replace YOUR_FEED_NAME and YOUR_PROJECT_NAME to use this configuration.
		And you have to set credentials in your settings.xml then run `mvn deploy`.
		You can see details at below page.
		https://docs.microsoft.com/en-us/azure/devops/artifacts/get-started-maven?view=azure-devops
	-->
	<!--
	<repositories>
		<repository>
			<id>learnspringmodule</id>
			<url>https://pkgs.dev.azure.com/YOUR_FEED_NAME/YOUR_PROJECT_NAME/_packaging/learnspringmodule/maven/v1</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>learnspringmodule</id>
			<url>https://pkgs.dev.azure.com/YOUR_FEED_NAME/YOUR_PROJECT_NAME/_packaging/learnspringmodule/maven/v1</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</distributionManagement>
	-->
</project>
